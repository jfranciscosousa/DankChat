"use strict";$(function(){function e(){T=o(v.val().trim());var e=h.val();T&&(L=y.focus(),M.emit("auth user",{username:T,password:e}))}function n(){var e=y.val();e=o(e),e&&C&&(y.val(""),a({username:T,message:e}),M.emit("new message",e))}function t(e,n){var t=$("<li>").addClass("log").text(e);i(t,n)}function a(e,n){if(e.message.startsWith("/music")){var t=e.message.split(" ");return d(t[1]),void y.val("")}if(e.message.startsWith("/CARALHO"))return d("MCUq2IuY6mw"),void y.val("");var a=u(e);n=n||{},0!==a.length&&(n.fade=!1,a.remove());var s=new Date;n={hour:"2-digit",minute:"2-digit"};var o=$('<span class="username"/>').text("["+s.toLocaleTimeString("pt-PT",n)+"] "+e.username).css("color",l(e.username));e.message=Autolinker.link(e.message,{className:"myLink"});var r=$('<div class="messageBody">').html(e.message),c=$("<span>").text(":").css("color","black");o.append(c);var f=e.typing?"typing":"",m=$('<li class="message"/>').data("username",e.username).addClass(f).append(o,r);m.kappa(),i(m,n)}function s(e){var n=this;u(e).fadeOut(function(){$(n).remove()})}function i(e,n){var t=$(e);n||(n={}),"undefined"==typeof n.fade&&(n.fade=!0),"undefined"==typeof n.prepend&&(n.prepend=!1),n.fade&&t.hide().fadeIn(f),n.prepend?w.prepend(t):w.append(t),w[0].scrollTop=w[0].scrollHeight}function o(e){return $("<div/>").text(e).text()}function r(){C&&(D||(D=!0),A=(new Date).getTime(),setTimeout(function(){var e=(new Date).getTime(),n=e-A;n>=m&&D&&(D=!1)},m))}function u(e){var n=this;return $(".typing.message").filter(function(){return $(n).data("username")===e.username})}function l(e){for(var n=7,t=0;t<e.length;t++)n=e.charCodeAt(t)+(n<<5)-n;var a=Math.abs(n%g.length);return g[a]}function c(e){return e.indexOf(" ")>=0}function d(e){var n='<iframe width="300" height="300" src="https://www.youtube.com/embed/youtubeID?autoplay=1">';n=n.replace("youtubeID",e),k.html(n)}var f=150,m=400,g=["#e21400","#91580f","#f8a700","#f78b00","#58dc00","#287b00","#a8f07a","#4ae8c4","#3b88eb","#3824aa","#a700ff","#d300e7"],p=$(window),v=$("#usernameInput"),h=$("#passwordInput"),w=$(".messages"),y=$("#inputMessage"),b=$("#errorMessage"),x=$("#userList"),k=$("#youtube"),I=$(".login.page"),U=$(".chat.page"),T=void 0,C=!1,D=!1,A=void 0,L=v.focus(),M=io();p.keydown(function(t){t.ctrlKey||t.metaKey||t.altKey||!T||L.focus(),13===t.which&&(T?(n(),D=!1):c(v.val())?window.alert("No spaces allowed!"):e())});var O=!1;window.onfocus=function(){O=!1},window.onblur=function(){O=!0},y.on("input",function(){r()}),h.click(function(){h.focus()}),y.click(function(){y.focus()}),M.on("login",function(e){I.fadeOut(),U.show(),I.off("click"),C=!0;for(var n=0;n<e.loggedUsers.length;n++)e.loggedUsers[n]==T?x.append($('<li class="list-group-item active">').attr("id",e.loggedUsers[n]).text(e.loggedUsers[n])):x.append($('<li class="list-group-item">').attr("id",e.loggedUsers[n]).text(e.loggedUsers[n]))}),M.on("login-fail",function(e){b.text(e.reason),T=null}),M.on("new message",function(e){a(e);var n=document.getElementById("notif");n.volume=1,O&&n.play()}),M.on("user joined",function(e){t(e.username+" joined"),T&&x.append($('<li class="list-group-item">').attr("id",e.username).text(e.username))}),M.on("user left",function(e){t(e.username+" left"),$("#"+e.username).remove(),s(e)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
